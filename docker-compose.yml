version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: ba_dashboard_db
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-ba_dashboard_db}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ba_network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ba_dashboard_app
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      DATABASE_URL: postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-postgres}@postgres:5432/${DB_NAME:-ba_dashboard_db}
      PORT: 3000
      JWT_SECRET: ${JWT_SECRET:-dev-secret-key}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-dev-refresh-secret}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3000,http://localhost:5173}
      LOG_LEVEL: ${LOG_LEVEL:-debug}
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    networks:
      - ba_network
    command: >
      sh -c "npm run migrate && npm run seed && npm start"

volumes:
  postgres_data:

networks:
  ba_network:
    driver: bridge

